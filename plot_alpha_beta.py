from turtle import color
import matplotlib
import matplotlib.pyplot as plt
import numpy as np
import matplotlib.ticker as ticker
matplotlib.rc('figure', figsize=(6.4, 4))


colors=["#4E79A7",  "#A0CBE8",  "#F28E2B",  "#FFBE7D",  "#59A14F",  "#8CD17D",  "#B6992D",  "#F1CE63",  "#499894",  "#86BCB6",  "#E15759",  "#E19D9A"]
linewidth=3
markersize=10
fontsize=18

beta = [0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1]    
#dataset_list = ['wikipedia','reddit','mooc']
dataset_list = ['askubuntu']
mode_list =['transductive','inductive']
#plot_mode_list = ['full','first_half','last_half','sampled_half','middle_half']
plot_mode_list = ['full']


for dataset in dataset_list:
    for mode in mode_list:
        fig, ax = plt.subplots()
        if dataset=='askubuntu':
            if mode=='transductive':
                alpha_0 = np.array([93.24841786134822, 93.60155061464448, 94.06591538336929, 93.97485321060417, 93.74642069197179, 93.84486988643788, 93.55708703394475, 93.38053644388532, 92.05976523684434])
                alpha_010 = np.array([93.85874412215702, 94.12074662156172, 93.84437288821339, 94.09540515804812, 93.91750500002655, 93.73790114003499, 93.22467582505487, 93.0688016788047, 92.21124345142809])
                alpha_020 = np.array([93.86776656459371, 94.0470040097351, 94.10196444398655, 94.148873332564, 94.23386517289822, 94.07081460434368, 93.61765901362588, 93.34397963893913, 92.1999192667185])
                alpha_030 = np.array([94.17230975817084, 94.23066778120001, 94.3716429376092, 94.27431919738062, 94.34512992635668, 94.04965125771466, 93.99711436125797, 93.6354193417538, 92.36295169912768])
                alpha_040 = np.array([94.37268945432513, 94.13372060839059, 94.4917381426686, 94.19118835440801, 94.15227552679633, 94.05934750217382, 93.60362622353928, 93.37789039644953, 92.24801557493429])
                alpha_050 = np.array([94.22153453322068, 94.340874477737, 94.30463823212595, 94.30683255748944, 94.36991683327719, 94.37529651935778, 93.85180841995557, 93.42731748221593, 92.13269624655695])
                alpha_060 = np.array([93.62243254074178, 94.14158808607787, 94.25269081613112, 94.36378250882633, 93.95059068752414, 94.26193278329977, 93.9596726412282, 93.77134538368426, 92.29617698739025])
                alpha_070 = np.array([94.19479293845085, 94.13774708478154, 94.46342796682082, 94.06145516374427, 94.02227225686278, 93.86172974277602, 93.74775210496293, 93.41857021461122, 91.88882545074719])
            else:
                alpha_0 = np.array([96.08193287645467, 96.6114303991654, 96.98967492625044, 97.27031142322467, 97.20147203477879, 97.71867726052655, 97.66532980780397, 97.78831214557495, 96.30727064198595])
                alpha_010 = np.array([96.50706817002164, 96.96233108820805, 97.17466585714692, 97.37928986723074, 97.51085220330134, 97.60270277461291, 97.43858342677697, 97.64880332647414, 96.52796946118517])
                alpha_020 = np.array([96.69187341240756, 96.98650619100594, 97.2339455635425, 97.45959999748226, 97.58475877513413, 97.80742206306773, 97.79308635613901, 97.88640450098848, 96.56726581744954])
                alpha_030 = np.array([96.85482800835172, 97.04239214351492, 97.30210370718716, 97.54784700549037, 97.67421741607404, 97.8021557065373, 97.94016912635375, 97.93642923999093, 96.62423321878813])
                alpha_040 = np.array([96.8519703176351, 97.06347764929107, 97.33407018896202, 97.46284699558831, 97.65369370412536, 97.80412530027603, 97.83557617613413, 97.73260480659285, 96.4456705594403])
                alpha_050 = np.array([96.85057703202865, 97.14624393590854, 97.35347107462994, 97.4658791520818, 97.64694322261512, 97.85619059006926, 97.87670010847079, 97.91131269479627, 96.4277803986463])
                alpha_060 = np.array([96.66334456711935, 96.94286377133616, 97.25956776327594, 97.52215634340227, 97.60128949806472, 97.8035451777193, 97.93138599303191, 98.00096710233606, 96.58056374408169])
                alpha_070 = np.array([96.78037314921866, 96.94172670645607, 97.27476466043711, 97.37076364860917, 97.57836536108894, 97.76664285278493, 97.83699211823915, 97.86241657442451, 96.37278362371153])
        elif dataset=='mooc':
            if mode=='transductive':
                alpha_0 = np.array([90.34420813227881, 91.71945424371222, 91.21576095618057, 90.2943862765562, 92.15594677380177, 91.25932929742974, 91.09555838567466, 89.70678326907931, 82.83342781632885])
                alpha_010 = np.array([91.0446264064865, 91.20557454580816, 91.02603577642918, 90.92429371661743, 91.52206601481959, 91.20705920771701, 91.16382963403572, 90.07167312217071, 79.75266268499561])
                alpha_020 = np.array([90.2298665328179, 90.276538778919, 91.07262013445687, 91.50030544977163, 91.4554607634355, 90.75783284093977, 91.55305917973398, 90.57238847731949, 81.49400134688658])
                alpha_030 = np.array([90.6274529217263, 90.75115546830006, 91.01008801850587, 91.1886871026206, 90.99816887583968, 92.05288748428343, 91.14618013619659, 89.764240978563, 83.8629450531735])
                alpha_040 = np.array([90.74340020775817, 91.09569334639846, 91.17953767290265, 90.8773075502222, 91.6678677659979, 91.51982988875484, 91.03205073450766, 90.33808372648566, 82.84498216379663])
                alpha_050 = np.array([90.77043723113235, 90.03728523408532, 91.24771960550655, 91.68935695774249, 91.19167945030402, 90.7101307626884, 90.9514521451835, 90.75697735422568, 82.02890364522023])
                alpha_060 = np.array([90.55849788133033, 91.11481685330244, 91.4383043941189, 91.54394144396638, 91.57457646323746, 91.61269635148204, 90.56584879562021, 89.75347247270328, 83.96343075468752])
                alpha_070 = np.array([89.77893145882135, 91.01271148519479, 91.44128093952493, 91.69572843207607, 90.84024405073905, 90.54436951886962, 90.64833812629884, 90.39038004849836, 84.95202585001941])
            else:
                alpha_0 = np.array([88.21527661439019, 89.90865581732128, 89.65660039945298, 88.84859545941679, 89.94259337031664, 88.85111233858346, 88.04512789086043, 86.74776704798191, 78.42984020623022])
                alpha_010 = np.array([89.25796191192234, 89.50222013328056, 89.56936028401059, 89.73359355799315, 89.55745242572706, 89.30551682017456, 88.02701307733871, 87.57147934366016, 76.58976536999928])
                alpha_020 = np.array([89.04986817358498, 89.05654578923729, 89.41978782581288, 89.56175571517383, 89.00634213755488, 88.48042232149365, 88.37242107252436, 87.15276840136521, 77.76140851390852])
                alpha_030 = np.array([89.23790534813604, 89.83269259678943, 89.0957486044052, 89.57028560632845, 89.27091132053539, 89.18486671454575, 88.05470171571275, 86.48146722470067, 78.61845823602252])
                alpha_040 = np.array([89.10950868263126, 89.4413952616554, 89.26798833298622, 89.43594788803196, 89.67436336561525, 88.99083200130062, 87.86062328277156, 87.12776771108723, 78.9902188114836])
                alpha_050 = np.array([89.68101075498167, 88.24434265828816, 89.22509742711429, 89.63178333886452, 89.33484412081081, 88.68501611159975, 88.23184960055931, 87.28250872178101, 76.87452296040598])
                alpha_060 = np.array([89.2310492069338, 89.30326557588666, 89.754470027567, 89.54135510446613, 89.80213367154549, 89.09240996789904, 87.81131014648116, 86.35047675572736, 79.09671204726982])
                alpha_070 = np.array([89.00502433746847, 89.38712655346637, 89.71604830134854, 89.75120007914195, 88.83454980682363, 88.44770434345659, 88.12884932707986, 87.07164257700528, 80.34895260936871])
        elif dataset=='reddit':
            if mode=='transductive':
                alpha_0 = np.array([98.46770052907159, 98.39957355308809, 98.54283828035243, 98.53419476044294, 98.61172739819999, 98.61643158753033, 98.65013073885704, 98.33413114045258, 98.49195687278475])
                alpha_010 = np.array([98.46059210215485, 98.54187821835218, 98.53761170668338, 98.59509508931596, 98.58109734815874, 98.61247347177769, 98.65393766782576, 98.25170862059946, 98.49183556661932])
                alpha_020 = np.array([98.53834418020494, 98.48783193491477, 98.54611722592331, 98.53767552175074, 98.60204634686367, 98.6315843276962, 98.67226036875361, 98.22361106440518, 98.47006477402837])
                alpha_030 = np.array([98.5194039947645, 98.50694241705853, 98.56838943648278, 98.575980804949, 98.60472251735078, 98.66590958847709, 98.67527145934025, 98.18577055968369, 98.33610436272467])
                alpha_040 = np.array([98.41378040741606, 98.51991354775613, 98.57355452985541, 98.56004189311243, 98.6105571552835, 98.65371426809834, 98.67986378935802, 98.09381090415194, 98.24187592076517])
                alpha_050 = np.array([98.51595157709582, 98.52350509622077, 98.56129762297729, 98.5959449787709, 98.61253437407417, 98.64947312714311, 98.64570055425472, 98.01365400280439, 98.45599078553361])
                alpha_060 = np.array([98.45560627664189, 98.55529827274194, 98.57221983736586, 98.56499007000265, 98.6352251590161, 98.6281570391327, 98.63126315274499, 97.97773662154017, 98.34910608650618])
                alpha_070 = np.array([98.53411783252332, 98.55259810315567, 98.55101500310124, 98.5610976607079, 98.62994299684858, 98.59576610305234, 98.63134300811375, 97.86381873029096, 97.97759386516782])
            else:
                alpha_0 = np.array([97.33153119897257, 97.29392401667404, 97.41606265211162, 97.55614887817721, 97.78404824279754, 97.86874603290934, 98.00964082591967, 97.75142901496956, 97.17903957416803])
                alpha_010 = np.array([97.32126155176802, 97.41101400924353, 97.45421973876628, 97.64222986206835, 97.7572668631227, 97.83864791298853, 98.0565259469117, 97.63603326573046, 97.1175828713923])
                alpha_020 = np.array([97.33967248777796, 97.34726951244662, 97.52948833175125, 97.607963553893, 97.71534068370578, 97.86760556254471, 98.07608866460778, 97.51112337557777, 97.1129069653292])
                alpha_030 = np.array([97.36165251726703, 97.40065147775807, 97.56437157237501, 97.64346831414542, 97.74413978578418, 97.91369107381823, 98.09105294489812, 97.49216985484648, 97.12777132926558])
                alpha_040 = np.array([97.24033214555715, 97.48336651633863, 97.54517396104761, 97.6324565263677, 97.80082428955333, 97.97409186918324, 98.05911321206298, 97.32583968300983, 96.94285008329835])
                alpha_050 = np.array([97.44602701015856, 97.51438902808545, 97.51994114305775, 97.66499315741567, 97.791115939779, 97.95056116579067, 98.01638600678022, 97.25989377264736, 97.23698621646825])
                alpha_060 = np.array([97.43442880689832, 97.59048238236116, 97.54848885672473, 97.67560945156258, 97.78212389174034, 97.97004465660804, 98.03620641427118, 97.17792079755192, 97.05187837593677])
                alpha_070 = np.array([97.43687800262035, 97.55312356966265, 97.54564597471848, 97.67413828972194, 97.7869563864362, 97.89074728674359, 98.0676854247248, 97.01180849594063, 96.45140227549774])      
        elif dataset=='wikipedia':
            if mode=='transductive':
                alpha_0 = np.array([98.34860300937652, 98.35242803256614, 98.37534048411676, 98.43146412071006, 98.48628786690554, 98.48532493557961, 98.43865973887199, 98.41064848329846, 97.09847576169479])
                alpha_010 = np.array([98.3967910428848, 98.44009189310329, 98.4368932353167, 98.53139761035457, 98.54530400740614, 98.48089156426282, 98.47535015191667, 98.34529940264738, 97.23741657908684])
                alpha_020 = np.array([98.3997072821297, 98.41979298265781, 98.53319953414038, 98.48462279086581, 98.52484478561185, 98.4724656434395, 98.51844596722968, 98.30375691841486, 97.19437273609053])
                alpha_030 = np.array([98.45505306847177, 98.54245156493253, 98.51223667694825, 98.52387870246557, 98.50835272782177, 98.53446468509767, 98.45451622973137, 98.42138218371063, 96.99327147689063])
                alpha_040 = np.array([98.54118065976441, 98.55345442905751, 98.48606264731107, 98.56482417495245, 98.56272147804124, 98.53765160328217, 98.49198581833676, 98.23707124038286, 96.87445720572707])
                alpha_050 = np.array([98.55051397545624, 98.4471031863294, 98.55033741586332, 98.54069585774002, 98.54177129526913, 98.54971095261598, 98.50517086967484, 98.34206808775983, 97.00561455367452])
                alpha_060 = np.array([98.53814615848, 98.52481228866165, 98.57756703010398, 98.57655461395434, 98.58977151347142, 98.47066963731784, 98.53625968188119, 98.30682801791907, 96.7065036992099])
                alpha_070 = np.array([98.56409336650118, 98.5384066423563, 98.60019831804901, 98.57664493394167, 98.5607695078234, 98.56187210770993, 98.4121023354247, 98.08297255564091, 96.50489306065403])
            else:
                alpha_0 = np.array([97.53567886802908, 97.6946386642942, 97.84645169290631, 97.92368202751038, 98.1550801108512, 98.27295717601436, 98.22379833891489, 98.32828552045281, 97.44789886478752])
                alpha_010 = np.array([97.72999241824014, 97.98077955139128, 98.07532445643614, 98.26633346461881, 98.36829431133278, 98.31570814836911, 98.3736416709242, 98.25109591942591, 97.55362352834923])
                alpha_020 = np.array([97.77173366732704, 97.94732336563126, 98.24320686442583, 98.21992391130631, 98.35570565694586, 98.34939249455107, 98.51830045645741, 98.25957941894808, 97.60014275706614])
                alpha_030 = np.array([98.00040169736357, 98.16824105250453, 98.1996207616412, 98.32395312376434, 98.29527315781381, 98.4194223315673, 98.40487443919805, 98.50875740512019, 97.25987378215686])
                alpha_040 = np.array([98.01816081239431, 98.13531075950903, 98.14446236227738, 98.30670381680582, 98.45320141348009, 98.4302261585808, 98.44058695672324, 98.28134674094626, 97.30777779775013])
                alpha_050 = np.array([98.0407738974489, 97.97439056873117, 98.20676004849417, 98.17651603557192, 98.35427070649295, 98.34078380593321, 98.42996574035246, 98.46419673894766, 97.4132863414568])
                alpha_060 = np.array([98.07020158842693, 98.10572232339703, 98.20508988832763, 98.26681333079893, 98.40641850095196, 98.25010168972648, 98.44423047123254, 98.3783705835437, 97.40935410162136])
                alpha_070 = np.array([97.99196616537095, 98.07150961615957, 98.19680917694168, 98.23083049149639, 98.40417351164008, 98.39528937168038, 98.3383815219495, 98.27195954116752, 97.35442729403593])

        for plot_mode in plot_mode_list:
            if plot_mode == 'full':
                plt.plot(beta, alpha_0, marker='d', color=colors[0], label=r'$\alpha$=0',linewidth=linewidth, markersize=markersize)
                plt.plot(beta, alpha_010, marker='o', color=colors[1], label=r'$\alpha$=0.1',linewidth=linewidth, markersize=markersize)
                plt.plot(beta, alpha_020, marker='*', color=colors[2], label=r'$\alpha$=0.2',linewidth=linewidth, markersize=markersize)
                plt.plot(beta, alpha_030, marker='v', color=colors[3], label=r'$\alpha$=0.3',linewidth=linewidth, markersize=markersize)
                plt.plot(beta, alpha_040, marker='^', color=colors[4], label=r'$\alpha$=0.4',linewidth=linewidth, markersize=markersize)
                plt.plot(beta, alpha_050, marker='s', color=colors[5], label=r'$\alpha$=0.5',linewidth=linewidth, markersize=markersize)
                plt.plot(beta, alpha_060, marker='>', color=colors[6], label=r'$\alpha$=0.6',linewidth=linewidth, markersize=markersize)
                plt.plot(beta, alpha_070, marker='<', color=colors[7], label=r'$\alpha$=0.7',linewidth=linewidth, markersize=markersize)
                plt.legend(fontsize=15,ncol=2) 
            elif plot_mode == 'first_half':
                plt.plot(beta, alpha_0, marker='d', color=colors[0], label=r'$\alpha$=0',linewidth=linewidth, markersize=markersize)
                plt.plot(beta, alpha_010, marker='o', color=colors[1], label=r'$\alpha$=0.1',linewidth=linewidth, markersize=markersize)
                plt.plot(beta, alpha_020, marker='*', color=colors[2], label=r'$\alpha$=0.2',linewidth=linewidth, markersize=markersize)
                plt.plot(beta, alpha_030, marker='v', color=colors[3], label=r'$\alpha$=0.3',linewidth=linewidth, markersize=markersize)
                plt.legend(fontsize=15)
            elif plot_mode == 'last_half':
                plt.plot(beta, alpha_040, marker='^', color=colors[4], label=r'$\alpha$=0.4',linewidth=linewidth, markersize=markersize)
                plt.plot(beta, alpha_050, marker='s', color=colors[5], label=r'$\alpha$=0.5',linewidth=linewidth, markersize=markersize)
                plt.plot(beta, alpha_060, marker='>', color=colors[6], label=r'$\alpha$=0.6',linewidth=linewidth, markersize=markersize)
                plt.plot(beta, alpha_070, marker='<', color=colors[7], label=r'$\alpha$=0.7',linewidth=linewidth, markersize=markersize)
                plt.legend(fontsize=15) 
            if plot_mode == 'sampled_half':
                plt.plot(beta, alpha_010, marker='o', color=colors[1], label=r'$\alpha$=0.1',linewidth=linewidth, markersize=markersize)
                plt.plot(beta, alpha_030, marker='v', color=colors[3], label=r'$\alpha$=0.3',linewidth=linewidth, markersize=markersize)
                plt.plot(beta, alpha_050, marker='s', color=colors[5], label=r'$\alpha$=0.5',linewidth=linewidth, markersize=markersize)
                plt.plot(beta, alpha_070, marker='<', color=colors[7], label=r'$\alpha$=0.7',linewidth=linewidth, markersize=markersize)
                plt.legend(fontsize=15) 
            elif plot_mode == 'middle_half':
                plt.plot(beta, alpha_020, marker='*', color=colors[2], label=r'$\alpha$=0.2',linewidth=linewidth, markersize=markersize)
                plt.plot(beta, alpha_030, marker='v', color=colors[3], label=r'$\alpha$=0.3',linewidth=linewidth, markersize=markersize)
                plt.plot(beta, alpha_040, marker='^', color=colors[4], label=r'$\alpha$=0.4',linewidth=linewidth, markersize=markersize)
                plt.plot(beta, alpha_050, marker='s', color=colors[5], label=r'$\alpha$=0.5',linewidth=linewidth, markersize=markersize)
                plt.plot(beta, alpha_060, marker='>', color=colors[6], label=r'$\alpha$=0.6',linewidth=linewidth, markersize=markersize)
                plt.legend(fontsize=15) 

            plt.xticks(fontsize=fontsize)
            plt.yticks(fontsize=fontsize)
            plt.xlabel(r'$\beta$',fontsize=fontsize) #X轴标签
            plt.ylabel("Average Precision (%)",fontsize=fontsize) #Y轴标签
            plt.grid(ls='--')
            plt.tight_layout()
            plt.savefig(f'{dataset}_{plot_mode}_alpha_beta_{mode}.pdf')
            plt.show()
            plt.close()